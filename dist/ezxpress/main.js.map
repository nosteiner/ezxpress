{"version":3,"sources":["webpack:///./AuthInterceptor.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/MotoBoy.ts","webpack:///./src/app/Order.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/components/about-us/about-us.component.html","webpack:///./src/app/components/about-us/about-us.component.scss","webpack:///./src/app/components/about-us/about-us.component.ts","webpack:///./src/app/components/add-motoboy/add-motoboy.component.html","webpack:///./src/app/components/add-motoboy/add-motoboy.component.scss","webpack:///./src/app/components/add-motoboy/add-motoboy.component.ts","webpack:///./src/app/components/delivery/delivery.component.html","webpack:///./src/app/components/delivery/delivery.component.scss","webpack:///./src/app/components/delivery/delivery.component.ts","webpack:///./src/app/components/destination/destination.component.html","webpack:///./src/app/components/destination/destination.component.scss","webpack:///./src/app/components/destination/destination.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.scss","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/map/map.component.html","webpack:///./src/app/components/map/map.component.scss","webpack:///./src/app/components/map/map.component.ts","webpack:///./src/app/components/maproute/maproute.component.html","webpack:///./src/app/components/maproute/maproute.component.scss","webpack:///./src/app/components/maproute/maproute.component.ts","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.scss","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/moto-share-live-location/moto-share-live-location.component.html","webpack:///./src/app/components/moto-share-live-location/moto-share-live-location.component.scss","webpack:///./src/app/components/moto-share-live-location/moto-share-live-location.component.ts","webpack:///./src/app/components/msgsnack/msgsnack.component.html","webpack:///./src/app/components/msgsnack/msgsnack.component.scss","webpack:///./src/app/components/msgsnack/msgsnack.component.ts","webpack:///./src/app/components/newclient/newclient.component.html","webpack:///./src/app/components/newclient/newclient.component.scss","webpack:///./src/app/components/newclient/newclient.component.ts","webpack:///./src/app/components/order-dialog/order-dialog.component.html","webpack:///./src/app/components/order-dialog/order-dialog.component.scss","webpack:///./src/app/components/order-dialog/order-dialog.component.ts","webpack:///./src/app/components/order-screen/order-screen.component.html","webpack:///./src/app/components/order-screen/order-screen.component.scss","webpack:///./src/app/components/order-screen/order-screen.component.ts","webpack:///./src/app/components/orderdelivered/orderdelivered.component.html","webpack:///./src/app/components/orderdelivered/orderdelivered.component.scss","webpack:///./src/app/components/orderdelivered/orderdelivered.component.ts","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.scss","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signature/signature.component.html","webpack:///./src/app/components/signature/signature.component.scss","webpack:///./src/app/components/signature/signature.component.ts","webpack:///./src/app/components/stepper/stepper.component.html","webpack:///./src/app/components/stepper/stepper.component.scss","webpack:///./src/app/components/stepper/stepper.component.ts","webpack:///./src/app/components/table/table.component.html","webpack:///./src/app/components/table/table.component.scss","webpack:///./src/app/components/table/table.component.ts","webpack:///./src/app/customer.service.ts","webpack:///./src/app/customer.ts","webpack:///./src/app/ezxpress.service.ts","webpack:///./src/app/moto.service.ts","webpack:///./src/app/orders.service.ts","webpack:///./src/app/user.ts","webpack:///./src/app/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n  import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n  import { Observable } from 'rxjs';\r\n\r\n\r\n  @Injectable()\r\n  export class AuthInterceptor implements HttpInterceptor {\r\n\r\n      intercept(req: HttpRequest<any>,\r\n                next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n          const idToken = localStorage.getItem(\"token\");\r\n\r\n          if (idToken) {\r\n              const cloned = req.clone({\r\n                  headers: req.headers.set(\"Authorization\",\r\n                      \"Bearer \" + idToken)\r\n              });\r\n\r\n              return next.handle(cloned);\r\n          }\r\n          else {\r\n              return next.handle(req);\r\n          }\r\n      }\r\n  }\r\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class MotoBoy{\r\n    motoboyId :number;\r\n    firstName : string;\r\n    lastName : string;\r\n    email    : string;\r\n    phoneNumber : number;\r\n    rate     : number;\r\n    photo    : string;\r\n    latitude : number;\r\n    longitude: number;\r\n    icon: string;\r\n    active : boolean;\r\n    password: string;\r\n    userName: string;\r\n    position : Object;\r\n    constructor() {\r\n\r\n        this.active = true; \r\n        this.rate = null ;\r\n        this.icon = \"https://png.icons8.com/ios/40/3CBC32/cycling-road-filled.png\"\r\n    }\r\n}","export class Order{\r\n    orderId : number;\r\n    customerId : number;\r\n    motoboyId : number;\r\n    localAddress : string;\r\n    latitudeOriginAddress : number;\r\n    longitudeOriginAddress:number;\r\n    destAddress: string;\r\n    latitudeDestAddress:number;\r\n    longitudeDestAddress:number;\r\n    price: number;\r\n    orderDate: Date ;\r\n    collectDate: Date ;\r\n    deliveryDate: Date ;\r\n    contactDestination: string ;\r\n    phoneDestination: string ;\r\n    phoneNumber: string ;\r\n    deliveryType: string ;\r\n    statusId: number;\r\n    active : boolean;\r\n    signature: string;\r\n    description: string;\r\n\r\n    constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NewclientComponent } from './components/newclient/newclient.component';\r\nimport { AddMotoboyComponent } from './components/add-motoboy/add-motoboy.component'\r\nimport { DeliveryComponent } from './components/delivery/delivery.component'\r\nimport { TableComponent } from './components/table/table.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AboutUsComponent } from './components/about-us/about-us.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'add-customer', component: NewclientComponent },\r\n  { path: 'add-motoboy', component: AddMotoboyComponent },\r\n  { path: 'add-delivery', component: DeliveryComponent },\r\n  { path: 'orders', component: TableComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'table', component: TableComponent },\r\n  { path: 'aboutUs', component: AboutUsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<app-menu></app-menu>\\r\\n<div class=\\\"app-container mt-5\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","module.exports = \".app-container {\\n  min-height: 100vh !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent  {\r\n  title = 'ezXpress';\r\n \r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n  ngOnInit(){\r\n  this.authService.isLoggedIn();\r\n  }\r\n}\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { MDBBootstrapModule, ButtonsModule, WavesModule, IconsModule } from 'angular-bootstrap-md';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { AgmDirectionModule } from 'agm-direction'\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { AuthInterceptor } from '../../AuthInterceptor';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { EzxpressService } from './ezxpress.service';\r\nimport { MotoService } from './moto.service';\r\nimport { OrdersService } from './orders.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AddMotoboyComponent } from './components/add-motoboy/add-motoboy.component';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { NewclientComponent } from './components/newclient/newclient.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DeliveryComponent } from './components/delivery/delivery.component';\r\nimport { DestinationComponent } from './components/destination/destination.component';\r\nimport { MaprouteComponent } from './components/maproute/maproute.component';\r\nimport { MotoShareLiveLocationComponent } from './components/moto-share-live-location/moto-share-live-location.component';\r\nimport { TableComponent } from './components/table/table.component';\r\nimport { OrderDialogComponent } from './components/order-dialog/order-dialog.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { SignatureComponent } from './components/signature/signature.component';\r\nimport { OrderdeliveredComponent } from './components/orderdelivered/orderdelivered.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { OrderScreenComponent } from './components/order-screen/order-screen.component';\r\nimport { StepperComponent } from './components/stepper/stepper.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { MsgsnackComponent } from './components/msgsnack/msgsnack.component';\r\nimport { AboutUsComponent } from './components/about-us/about-us.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatSelectModule,\r\n  MatDividerModule,\r\n  MatInputModule,\r\n  MatToolbarModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatDialogModule,\r\n  MatProgressSpinnerModule,\r\n  MatSnackBarModule,\r\n  MatStepperModule,\r\n  MatRadioModule,\r\n} from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddMotoboyComponent,\r\n    MapComponent,\r\n    NewclientComponent,\r\n    HomeComponent,\r\n    DeliveryComponent,\r\n    DestinationComponent,\r\n    MaprouteComponent,\r\n    MotoShareLiveLocationComponent,\r\n    TableComponent,\r\n    OrderDialogComponent,\r\n    ProfileComponent,\r\n    SignatureComponent,\r\n    OrderdeliveredComponent,\r\n    LoginComponent,\r\n    OrderScreenComponent,\r\n    StepperComponent,\r\n    MenuComponent,\r\n    MsgsnackComponent,\r\n    AboutUsComponent,\r\n    FooterComponent,\r\n\r\n\r\n\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatFormFieldModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyB-G0WodfAOEjuc9WcD0lC70UesBjzJG9g',\r\n      libraries: [\"places\"]\r\n    }),\r\n    MDBBootstrapModule.forRoot(),\r\n    AgmDirectionModule,\r\n    HttpClientModule,\r\n    MatToolbarModule,\r\n    AppRoutingModule,\r\n    GooglePlaceModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    FileUploadModule,\r\n    MatDividerModule,\r\n    SignaturePadModule,\r\n    MatProgressSpinnerModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatStepperModule,\r\n    MatSnackBarModule,\r\n    ButtonsModule,\r\n    WavesModule,\r\n    IconsModule\r\n  ],\r\n  entryComponents: [OrderDialogComponent, OrderScreenComponent],\r\n  providers: [EzxpressService, MotoService, OrdersService, AuthService, JwtHelperService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }],\r\n  bootstrap: [AppComponent],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from './user';\r\nimport { CustomerService } from './customer.service';\r\nimport { MotoService } from './moto.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  userType: string;\r\n  currentUser;\r\n  user = new User;\r\n  public token: string;\r\n  public msgUpdated: Observable<string>;\r\n  public msgSubject: Subject<string> = new Subject<string>();\r\n  public authUpdated: Observable<any>;\r\n  public authSubject: Subject<any> = new Subject<any>();\r\n  constructor(private http: HttpClient, private router: Router, private customerService: CustomerService, private motoService: MotoService) {\r\n\r\n    this.msgUpdated = this.msgSubject.asObservable();\r\n    this.authUpdated = this.authSubject.asObservable();\r\n\r\n  }\r\n\r\n  login(user) {\r\n    this.http.post<any>('/login', user).subscribe(result => {\r\n\r\n      localStorage.setItem('token', result.token)\r\n      this.isLoggedIn();\r\n      this.router.navigate([''])\r\n    },\r\n      (err) => {\r\n\r\n        this.msgSubject.next(\"Invalid user name or password\")\r\n      }\r\n    );\r\n  }\r\n\r\n  isLoggedIn() {\r\n    this.http.get<User>('/userDetails').subscribe(data => {\r\n      this.setUser(data);\r\n    \r\n    })\r\n  }\r\n\r\n  logoff() {\r\n    localStorage.removeItem('token')\r\n    this.currentUser = null;\r\n    this.authSubject.next(null)\r\n    this.router.navigate([''])\r\n  }\r\n\r\n  setUser(user: User) {\r\n    if (user.motoboyId === null) {\r\n      this.customerService.singleCustomerObservable.subscribe((customer)=>{\r\n        this.currentUser = customer;\r\n        this.authSubject.next(customer);\r\n      })\r\n      this.customerService.getCustomer(user.customerId);\r\n      this.userType = \"customer\";\r\n    \r\n    } else {\r\n      this.motoService.singleMotoObservable.subscribe((motoboy)=>{\r\n        this.currentUser = motoboy;\r\n        this.authSubject.next(motoboy)\r\n      });\r\n      this.motoService.getMoto(user.motoboyId);\r\n      this.userType = \"motoboy\";\r\n      \r\n    }  \r\n  }\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"container mt-5\\\">\\r\\n<div class=\\\"row pt-5 \\\">\\r\\n    <div class=\\\"col-md-6 vertical-center\\\">\\r\\n        <div>\\r\\n            <h3>Life is better on a bike</h3>\\r\\n\\r\\n            <p class=\\\"about\\\" align=\\\"justify\\\">\\r\\n                Speed - bicycles do not stop. No traffic jams, no traffic lights and many shortcuts. <br>\\r\\n                Efficient and ecological - all deliveries are carried out without a drop of fuel, pollution or noise. <br>\\r\\n                Economical and affordable - unlike motorcycles, there are no expenses for car wear, no insurance expenses and\\r\\n                no fuel expenses! Therefore, the prices for errands are much lower than usual.</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 pb-5 col flex-last center\\\">\\r\\n        <img src=\\\"https://i.giphy.com/media/3o84Ufy4oR2l0nSdEs/giphy.webp\\\" />\\r\\n    </div>\\r\\n  \\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".container {\\n  display: flex; }\\n\\n.vertical-center {\\n  display: flex;\\n  align-items: center; }\\n\\nimg {\\n  width: 100%; }\\n\\n.center {\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.scss']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container  d-flex justify-content-center\\\">\\r\\n  <div class=\\\"row pt-5\\\">\\r\\n    <div class=\\\"col-12 col-md-auto\\\">\\r\\n      <div class=\\\"text-center border border-light m-5 p-5\\\">\\r\\n\\r\\n        <p class=\\\"h4 mb-4\\\">Register as a delivery person</p>\\r\\n\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=motoboy.userName placeholder=\\\"User Name\\\">\\r\\n        <input type=\\\"email\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=motoboy.email placeholder=\\\"Email\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=motoboy.firstName placeholder=\\\"First Name\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=motoboy.lastName placeholder=\\\"Last Name\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=motoboy.phoneNumber placeholder=\\\"Phone Number\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input type=\\\"password\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <span class=\\\"input-group-text\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ?  'visibility_off' : 'visibility'}}</mat-icon>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input type=\\\"password\\\"  class=\\\"form-control\\\" [(ngModel)]=motoboy.password placeholder=\\\"Confirm password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <span class=\\\"input-group-text\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)='submitMotoBoy()'>Submit</button>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".container {\\n  display: flex; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MotoService } from '../../moto.service'\r\nimport { MotoBoy } from '../../MotoBoy'\r\nimport {User} from '../../user'\r\nimport {UsersService} from '../../users.service'\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'add-motoboy',\r\n  templateUrl: './add-motoboy.component.html',\r\n  styleUrls: ['./add-motoboy.component.scss']\r\n})\r\nexport class AddMotoboyComponent implements OnInit {\r\n  selectPhoto = \"\";\r\n  motoboy : MotoBoy = new MotoBoy();\r\n  user : User = new User();\r\n       \r\n  constructor(private motoService: MotoService, private userService: UsersService, private authService: AuthService) { }\r\n\r\n  onPhotofile(event) {\r\n    this.selectPhoto = event.target.files[0]\r\n  }\r\n\r\n  submitMotoBoy() {\r\n    this.motoboy.photo = this.selectPhoto;\r\n    this.motoService.addMotoBoy(this.motoboy);\r\n    this.motoService.singleMotoObservable.subscribe(motoboy => {\r\n      this.authService.login({username: motoboy.userName, password: motoboy.password})\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container flex-center\\\">\\r\\n  <div class=\\\"row flex-center mt-3\\\">\\r\\n    <div class=\\\"col-5\\\">\\r\\n      <h3> From </h3>\\r\\n      <mat-form-field>\\r\\n        <input matInput color=\\\"primary\\\" type='text' [(ngModel)]='order.localAddress' placeholder=\\\"Pickup Address\\\"\\r\\n          #search>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput color=\\\"primary\\\" type='text' [(ngModel)]='order.description' placeholder=\\\"Description\\\" #search>\\r\\n      </mat-form-field>\\r\\n      <br>\\r\\n      <h3> Destination </h3>\\r\\n      <app-destination></app-destination>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <mat-spinner id=\\\"spinner\\\" *ngIf='this.calcOrder == true' [color]=\\\"color\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\"></mat-spinner>\\r\\n      <div class=\\\"delivery-type\\\" *ngIf='this.calcOrder == false'>\\r\\n\\r\\n        <h3> Delivery Type</h3>\\r\\n        <div id=\\\"labels\\\">\\r\\n\\r\\n          <input type=\\\"radio\\\" class=\\\"radio_item\\\" id=\\\"radio1\\\" name=\\\"order.deliveryType\\\" [checked]=\\\"order.deliveryType === 'envelope'\\\"\\r\\n            (change)=\\\"setValue('envelope')\\\" value=\\\"envelope\\\" />\\r\\n          <label class=\\\"label_item\\\" for=\\\"radio1\\\">\\r\\n            <img src=\\\"https://www.editor.ru/wp-content/uploads/2015/07/par-avion-open.png\\\"> </label>\\r\\n          <p class=\\\"legendDelivery\\\">Up to 300gr</p>\\r\\n\\r\\n          <input type=\\\"radio\\\" class=\\\"radio_item\\\" id=\\\"radio2\\\" name=\\\"order.deliveryType\\\" [checked]=\\\"order.deliveryType === 'box'\\\"\\r\\n            (change)=\\\"setValue('box')\\\" value=\\\"box\\\" />\\r\\n          <label class=\\\"label_item\\\" for=\\\"radio2\\\">\\r\\n            <img src=\\\"http://pngimg.com/uploads/box/box_PNG139.png\\\"> </label>\\r\\n          <p class=\\\"legendDelivery1\\\">Up to 5Kg</p>\\r\\n\\r\\n        </div>\\r\\n        <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect  *ngIf=\\\"(this.order.deliveryType != undefined)\\\" (click)='calculateRate()' >Calculate</button>\\r\\n      </div>\\r\\n\\r\\n      <div id=\\\"price\\\" *ngIf=\\\"this.order.price > 0\\\">\\r\\n        <h5> Distance: {{ dist }} Km</h5>\\r\\n        <h5> Price : {{ order.price | currency:\\\"₪\\\"}}</h5>\\r\\n        <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" outline=\\\"true\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)='confirmOrder()'>Confirm</button>\\r\\n        <button mdbBtn type=\\\"button\\\" color=\\\"blue-grey\\\" outline=\\\"true\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect routerLink='/'>Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <app-map [order]=\\\"order\\\"></app-map>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".radio_item {\\n  display: none !important; }\\n\\n.label_item {\\n  opacity: 0.3; }\\n\\n.radio_item:checked + label {\\n  opacity: 1; }\\n\\nimg {\\n  height: 70px;\\n  width: 70px; }\\n\\napp-map {\\n  width: 100%; }\\n\\n.container {\\n  display: flex; }\\n\"","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { Order } from '../../Order';\r\nimport { MaprouteComponent } from '../maproute/maproute.component'\r\nimport { MapsAPILoader } from \"@agm/core\"\r\nimport { OrdersService } from '../../orders.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { OrderDialogComponent } from '../order-dialog/order-dialog.component';\r\nimport { MotoService } from '../../moto.service';\r\nimport { UsersService } from '../../users.service';\r\nimport { AuthService } from '../../auth.service';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.scss']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  @ViewChild('search') public searchElement: ElementRef;\r\n  @ViewChild(MaprouteComponent) mapRoute: MaprouteComponent;\r\n\r\n  localAddress: string\r\n  dist: number;\r\n  order: Order;\r\n  calcOrder: Boolean = false;\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n\r\n  constructor(private orderService: OrdersService, private motoService: MotoService,\r\n    private mapsApiLoader: MapsAPILoader, private ngZone: NgZone,\r\n    public dialog: MatDialog, private authService: AuthService) {\r\n\r\n    this.order = new Order();\r\n\r\n    this.motoService.addressUpdated.subscribe((data) => {\r\n      this.order.localAddress = data.localAddress;\r\n      this.order.latitudeOriginAddress = data.lat;\r\n      this.order.longitudeOriginAddress = data.lng;\r\n    })\r\n  }\r\n\r\n  setValue(value) {\r\n    this.order.deliveryType = value;\r\n  }\r\n\r\n  calculateRate() {\r\n    this.calcOrder = true;\r\n    var localAddress = new google.maps.LatLng(this.order.latitudeOriginAddress, this.order.longitudeDestAddress)\r\n    var destAddress = new google.maps.LatLng(this.order.latitudeDestAddress, this.order.longitudeDestAddress)\r\n    var travelway = google.maps.TravelMode.DRIVING\r\n    var directionsService = new google.maps.DirectionsService();\r\n\r\n    var directionsRequest = {\r\n      origin: localAddress,\r\n      destination: destAddress,\r\n      travelMode: travelway,\r\n      avoidHighways: true\r\n    }\r\n    directionsService.route(directionsRequest, (result, status) => {\r\n       this.dist = result.routes[0].legs[0].distance.value / 1000\r\n      if (this.order.deliveryType == \"envelope\")\r\n        var multPrice = 5\r\n      else\r\n        var multPrice = 7\r\n      if (this.dist <= 4) this.order.price = 20\r\n      else\r\n        this.order.price = (this.dist) * multPrice;\r\n      this.calcOrder = false;\r\n    })\r\n  }\r\n\r\n  confirmOrder() {\r\n    this.order.orderDate = new Date();\r\n    this.order.statusId = 1\r\n    this.orderService.addNewOrder(this.order)\r\n\r\n    let dialogRef = this.dialog.open(OrderDialogComponent, {\r\n      width: '500px'\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.motoService.getClosesMoto(this.order.latitudeOriginAddress, this.order.longitudeOriginAddress)\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mapsApiLoader.load().then(() => {\r\n      let autocomplete = new google.maps.places.Autocomplete(this.searchElement.nativeElement, { types: [\"address\"] })\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return\r\n          }\r\n          console.log(place)\r\n          this.order.localAddress = place.formatted_address\r\n          this.order.latitudeOriginAddress = place.geometry.location.lat();\r\n          this.order.longitudeOriginAddress = place.geometry.location.lng();\r\n        })\r\n      })\r\n    })\r\n  }\r\n}","module.exports = \"<mat-form-field>\\r\\n  <input matInput [ngModel]=\\\"this.order.destAddress\\\" placeholder=\\\"Destination Address\\\" #searchDest>\\r\\n</mat-form-field>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n<input matInput [(ngModel)]=\\\"this.order.contactDestination\\\" placeholder=\\\"Recipient's name\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n  <input matInput [(ngModel)]=\\\"this.order.phoneDestination\\\" placeholder=\\\"Contact phone number\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n\"","module.exports = \".mat-form-field.mat-form-field {\\n  width: 350px; }\\n\"","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { MapsAPILoader } from \"@agm/core\"\r\n//import {} from \"@tpes/googlemaps\"\r\n\r\nimport { Order } from '../../Order';\r\nimport { DeliveryComponent } from '../delivery/delivery.component'\r\n\r\n@Component({\r\n  selector: 'app-destination',\r\n  templateUrl: './destination.component.html',\r\n  styleUrls: ['./destination.component.scss']\r\n})\r\nexport class DestinationComponent implements OnInit {\r\n\r\n  @ViewChild('searchDest') public searchDestElement: ElementRef;\r\n  \r\n  order: Order \r\n  constructor(private deliveryComponent: DeliveryComponent, private mapsApiLoader: MapsAPILoader, private ngZone: NgZone) { \r\n    this.order = this.deliveryComponent.order\r\n    console.log(this.order)\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mapsApiLoader.load().then( () => \r\n    {\r\n      let autocomplete = new google.maps.places.Autocomplete(this.searchDestElement.nativeElement, {types:[\"address\"]})\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        this.ngZone.run( () => {\r\n          let place : google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          if (place.geometry === undefined || place.geometry === null){\r\n            return\r\n          }\r\n          this.order.destAddress = place.formatted_address\r\n          this.order.latitudeDestAddress = place.geometry.location.lat();\r\n          this.order.longitudeDestAddress = place.geometry.location.lng();\r\n        })\r\n      })\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<!-- Footer -->\\r\\n<footer class=\\\"page-footer font-small cyan darken-4 pt-4\\\">\\r\\n  <!-- Footer Text -->\\r\\n  <div class=\\\"container-fluid text-center text-md-left\\\">\\r\\n\\r\\n    <!-- Grid row -->\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <!-- Grid column -->\\r\\n      <div class=\\\"col mt-md-0 mt-3\\\">\\r\\n\\r\\n        <!-- Content -->\\r\\n\\r\\n        <h5 class=\\\"text-uppercase font-weight-bold\\\">Technologies used to build this project</h5>\\r\\n        <div class=\\\"d-flex justify-content-around flex-wrap align-items-center\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 50px;\\\" src=\\\"./../../../assets/logos/passport.png\\\" alt=\\\"passport\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 70px;\\\" src=\\\"./../../../assets/logos/nodejs.png\\\" alt=\\\"node.js\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 50px;\\\" src=\\\"./../../../assets/logos/Angular.png\\\" alt=\\\"angular\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 90px;\\\" src=\\\"./../../../assets/logos/msql.png\\\" alt=\\\"mysql\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 50px;\\\" src=\\\"./../../../assets/logos/google-cloud-sql.png\\\" alt=\\\"google cloud sql\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 50px;\\\" src=\\\"./../../../assets/logos/google-maps.png\\\" alt=\\\"google maps\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 90px;\\\" src=\\\"./../../../assets/logos/nexmo (2).png\\\" alt=\\\"nexmo\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 70px;\\\" src=\\\"./../../../assets/logos/nodemailer.png\\\" alt=\\\"nodemailer\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 90px;\\\" src=\\\"./../../../assets/logos/expressjs.png\\\" alt=\\\"express\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 80px;\\\" src=\\\"./../../../assets/logos/mdb.png\\\" alt=\\\"mdbootstrap\\\">\\r\\n          <img class=\\\"m-1\\\" style=\\\"width: 90px;\\\"src=\\\"./../../../assets/logos/jwt_05.jpg\\\" alt=\\\"jwt\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- Grid row -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Footer Text -->\\r\\n\\r\\n  <!-- Copyright -->\\r\\n  <div class=\\\"footer-copyright p-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-10\\\">\\r\\n        © 2018 Copyright: <a class=\\\"align-middle\\\" href=\\\"http://www.noamsteiner.com/\\\"> Noam Steiner</a>\\r\\n      </div>\\r\\n\\r\\n      <!-- Grid column -->\\r\\n      <div class=\\\"col-md-1\\\">\\r\\n        <a href=\\\"mailto:no.steiner@gmail.com\\\">Contact us</a> \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-1\\\">\\r\\n        <a class=\\\"fb-ic\\\" href=\\\"https://github.com/nosteiner/ezxpress\\\">\\r\\n          <mdb-icon icon=\\\"github\\\" size=\\\"2x\\\" class=\\\"white-text\\\"></mdb-icon>\\r\\n        </a>\\r\\n      </div>\\r\\n      <!-- Grid column -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <!-- Copyright -->\\r\\n\\r\\n</footer>\\r\\n<!-- Footer -->\"","module.exports = \"img {\\n  width: 50px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<section class=\\\"view intro-2 rgba-gradient\\\">\\r\\n    <div class=\\\"full-bg-img\\\">\\r\\n        <div class=\\\"container flex-center\\\">\\r\\n            <div class=\\\"row flex-center pt-5 mt-3\\\">\\r\\n                <div class=\\\"col-md-6 text-center text-md-left margins\\\">\\r\\n                    <div class=\\\"white-text\\\">\\r\\n                        <h1 class=\\\"h1-responsive\\\">ezXpress </h1>\\r\\n                        <h4>With ezXpress, you can easily deliver your packages while saving the environment.\\r\\n                                </h4>\\r\\n                        <br>\\r\\n                        <a class=\\\"btn btn-outline-white\\\" routerLink=\\\"/login\\\">Sign up now!</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        </div>\\r\\n</section>\\r\\n\"","module.exports = \".intro-header {\\n  height: unset !important; }\\n\\n.intro-2 {\\n  background: url(\\\"https://ksr-ugc.imgix.net/assets/015/781/101/9bfd0b23738429e5645c9b865d84cded_original.png?ixlib=rb-1.1.0&crop=faces&w=1552&h=873&fit=crop&v=1489536055&auto=format&frame=1&q=92&s=2db5e22eba467d03a0a3df15caa9ca27\\\") no-repeat center center;\\n  background-size: cover; }\\n\\n.view {\\n  height: 100vh !important; }\\n\\n.btn .fa {\\n  margin-left: 3px; }\\n\\nh6 {\\n  line-height: 1.7; }\\n\\n.rgba-gradient .full-bg-img {\\n  background: linear-gradient(45deg, rgba(207, 250, 15, 0.589), rgba(0, 195, 255, 0.644) 100%);\\n  height: 100vh !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container  d-flex justify-content-center\\\">\\r\\n  <div class=\\\"row  pt-5\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"text-center border border-light m-5 p-5\\\">\\r\\n\\r\\n        <p class=\\\"h4 mb-4\\\">Sign in</p>\\r\\n        \\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=\\\"userName\\\" placeholder=\\\"User name\\\">\\r\\n\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <span class=\\\"input-group-text\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <p *ngIf=\\\"msg ==='Invalid user name or password'\\\" class=\\\"msg\\\">\\r\\n          <mat-icon>warning</mat-icon>\\r\\n          {{ msg }}\\r\\n        </p>\\r\\n\\r\\n\\r\\n        <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)=\\\"login()\\\">Login</button>\\r\\n        <p class=\\\"blue-grey-text\\\">Don't have an account? <a class=\\\"font-weight-bold\\\" (click)=\\\"signup()\\\">Sign up</a>\\r\\n        </p>\\r\\n\\r\\n        <div class=\\\"row justify-content-md-center\\\" *ngIf=\\\"toogle==1\\\">\\r\\n          <button mdbBtn type=\\\"button\\\" color=\\\"default\\\" outline=\\\"true\\\" mdbWavesEffect routerLink=\\\"/add-motoboy\\\">New\\r\\n            Delivery Person</button>\\r\\n          <button mdbBtn type=\\\"button\\\" color=\\\"default\\\" outline=\\\"true\\\" mdbWavesEffect routerLink=\\\"/add-customer\\\">New\\r\\n            Customer</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".container {\\n  display: flex; }\\n\"","\r\nimport { Component, OnInit, Inject} from '@angular/core';\r\nimport {MotoService} from '../../moto.service'\r\nimport {CustomerService} from '../../customer.service'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {Customer} from '../../customer'\r\nimport {MotoBoy} from '../../MotoBoy'\r\n//import {SignupComponent} from '../signup/signup.component'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { RouterModule, Routes ,Router} from '@angular/router';\r\nimport { UsersService } from '../../users.service';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  loginParms : Object;\r\n  tokenid : Object = {token: ''}\r\n  msg : string\r\n  customer :Customer\r\n  hide = true;\r\n  userName = '';\r\n  password = '';\r\n  toogle =0;\r\n  \r\n  constructor(\r\n    private usersService:UsersService,\r\n    public customerService:CustomerService,\r\n    public dialog: MatDialog,\r\n    private router:Router,\r\n    private authService : AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.msgUpdated.subscribe((data)=>{\r\n      this.msg = data; })\r\n  }\r\n\r\n  login(){\r\n    this.loginParms = {username: this.userName, password: this.password}\r\n    this.authService.login(this.loginParms) \r\n  }\r\n\r\n  signup(){\r\n    if (this.toogle==1){\r\n      this.toogle=0;\r\n    }\r\n    if (this.toogle==0){\r\n      this.toogle=1;\r\n    }\r\n  }\r\n}","module.exports = \"\\r\\n <div>\\r\\n    <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"15\\\">  \\r\\n      <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\r\\n      <agm-direction [origin]=\\\"origin\\\" [destination]=\\\"destination\\\" [travelMode]=\\\"travelMode\\\">\\r\\n      </agm-direction>\\r\\n    </agm-map>\\r\\n  </div>\\r\\n\"","module.exports = \"agm-map {\\n  height: 500px;\\n  width: 380px; }\\n\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { MotoBoy } from '../../MotoBoy';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { MotoService } from '../../moto.service';\r\nimport { Order } from '../../Order';\r\nimport { LatLng } from '@agm/core';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\n\r\nexport class MapComponent {\r\n  @Input() order: Order = new Order;\r\n\r\n  @ViewChild('mapDiv') mapDiv: ElementRef;\r\n  public addressUpdated: Observable<any>;\r\n  public addressSubject: Subject<any>;\r\n  map: google.maps.Map;\r\n  latLng: { lat: number, lng: number }\r\n  lat: number //= 51.678418;\r\n  lng: number //= 7.809007;\r\n\r\n  // motoBoys: Array<MotoBoy>\r\n  motoBoyIcon: string;\r\n  localAddress: string;\r\n  origin = { lat: 0, lng: 0 }\r\n  destination = { lat: 0, lng: 0 }\r\n  travelMode = \"WALKING\"\r\n\r\n  constructor(private motoService: MotoService) {\r\n\r\n  }\r\n\r\n  getUserLocation() {\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude;\r\n        this.origin = { lat: this.order.latitudeOriginAddress, lng: this.order.longitudeOriginAddress }\r\n        //this.destination = { lat: this.order.latitudeDestAddress, lng: this.order.longitudeDestAddress }\r\n        this.motoService.reverseAddress(this.lat, this.lng);\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUserLocation();\r\n    setInterval(() => {\r\n      if (this.order.latitudeOriginAddress != undefined && (this.order.latitudeDestAddress != undefined)) {\r\n        this.origin = { lat: this.order.latitudeOriginAddress, lng: this.order.longitudeOriginAddress }\r\n        this.destination = { lat: this.order.latitudeDestAddress, lng: this.order.longitudeDestAddress }\r\n      }\r\n    }, 4000)\r\n  }\r\n}","module.exports = \"\\r\\n<div  id=\\\"mapDiv\\\">\\r\\n  \\r\\n</div>\"","module.exports = \"#mapDiv {\\n  height: 650px;\\n  z-index: 1000; }\\n\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { MotoBoy } from '../../MotoBoy';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nimport {} from '@types/google-maps';\r\n\r\n\r\n@Component({\r\n  selector: 'app-maproute',\r\n  templateUrl: './maproute.component.html',\r\n  styleUrls: ['./maproute.component.scss']\r\n})\r\nexport class MaprouteComponent implements OnInit {\r\n  //@ViewChild('mapDiv') mapDiv: ElementRef;\r\n  //map: google.maps.Map;\r\n\r\n  constructor() { }\r\n\r\n\r\n\r\n  showRoutes(result){\r\n    \r\n    var lat = 32.0503025, lng = 34.76668559999996\r\n    var directionsDisplay = new google.maps.DirectionsRenderer();\r\n    var centerMap = new google.maps.LatLng(lat, lng);\r\n    var mapOptions = {\r\n                      zoom:12,\r\n                      center: centerMap\r\n                     }\r\n    var map = new google.maps.Map(document.getElementById('mapDiv') , mapOptions);\r\n    directionsDisplay.setMap(map);\r\n    directionsDisplay.setDirections(result);\r\n  }\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"<mdb-navbar SideClass=\\\"navbar fixed-top navbar-expand-lg navbar-dark unique-color-dark scrolling-navbar intro-fixed-nav\\\"\\r\\n    [containerInside]=\\\"false\\\">\\r\\n    <mdb-navbar-brand>\\r\\n        <a class=\\\"logo navbar-brand font-weight-bold\\\" routerLink=\\\"\\\"> <strong>ezXpress</strong> </a>\\r\\n    </mdb-navbar-brand>\\r\\n    <links>\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item waves-light\\\" mdbWavesEffect>\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item waves-light\\\" mdbWavesEffect>\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/aboutUs\\\">About</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item waves-light\\\" *ngIf=\\\"userType\\\" mdbWavesEffect>\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">My Profile</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item waves-light\\\" mdbWavesEffect>\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/table\\\">\\r\\n                    <span *ngIf=\\\"userType === 'customer'\\\"> My orders</span>\\r\\n                    <span *ngIf=\\\"userType === 'motoboy'\\\"> Open orders</span>\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item waves-light\\\" *ngIf=\\\"userType === 'customer'\\\" mdbWavesEffect>\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/add-delivery\\\">Express Delivery</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n        <span class=\\\"navbar-text white-text\\\" *ngIf='currentUser != null'>\\r\\n            You are connected as\\r\\n            <b>{{currentUser.firstName}}\\r\\n                {{currentUser.lastName}}</b>\\r\\n        </span>\\r\\n        <form class=\\\"form-inline\\\">\\r\\n            <form class=\\\"form-inline\\\">\\r\\n                <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light\\\" *ngIf='currentUser == null' routerLink=\\\"/login\\\"\\r\\n                    mdbWavesEffect> Signin/Signup</button>\\r\\n                <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light\\\" (click)=\\\"this.authService.logoff()\\\"\\r\\n                    *ngIf='currentUser != null'>Logout</button>\\r\\n            </form>\\r\\n        </form>\\r\\n\\r\\n    </links>\\r\\n\\r\\n</mdb-navbar>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../auth.service';\r\nimport { User } from '../../user';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  userType: string;\r\n  currentUser: User = new User\r\n  constructor (private authService : AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authService.currentUser;\r\n    this.authService.authUpdated.subscribe((user)=>{\r\n      this.currentUser = user\r\n      this.userType = this.authService.userType\r\n      if(user === null){\r\n        this.userType = null;\r\n      }\r\n    })\r\n  }\r\n  }\r\n\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Please Enter your e-mail to share live location</h1>\\r\\n  <div class=\\\"form\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"currentMotoId\\\" placeholder=\\\"your id\\\">\\r\\n    </mat-form-field>\\r\\n    <button mat-button (click)=\\\"submit()\\\">SHARE LIVE LOCATION</button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { MotoService } from '../../moto.service';\r\nimport { MotoBoy } from '../../MotoBoy';\r\n\r\n@Component({\r\n  selector: 'app-moto-share-live-location',\r\n  templateUrl: './moto-share-live-location.component.html',\r\n  styleUrls: ['./moto-share-live-location.component.scss']\r\n})\r\nexport class MotoShareLiveLocationComponent implements OnInit {\r\n\r\n  currentMotoId: string;\r\n \r\n  constructor(private motoService: MotoService, ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.currentMotoId)\r\n    this.motoService.shareLiveLocation(this.currentMotoId)\r\n  }\r\n\r\n}\r\n","module.exports = \"<p id=\\\"msg\\\">\\r\\n  SignUp Successful !!\\r\\n</p>\\r\\n\"","module.exports = \"#msg {\\n  color: orangered; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-msgsnack',\r\n  templateUrl: './msgsnack.component.html',\r\n  styleUrls: ['./msgsnack.component.scss']\r\n})\r\nexport class MsgsnackComponent implements OnInit {\r\n\r\n  constructor(public snackBar: MatSnackBar) { }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.openFromComponent(MsgsnackComponent, {\r\n      duration: 500,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container  d-flex justify-content-center\\\">\\r\\n  <div class=\\\"row pt-5\\\">\\r\\n    <div class=\\\"col-12 col-md-auto\\\">\\r\\n      <div class=\\\"text-center border border-light m-5 p-5\\\">\\r\\n\\r\\n        <p class=\\\"h4 mb-4\\\">Register as a new customer</p>\\r\\n\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=newClient.userName placeholder=\\\"User Name\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=newClient.firstName placeholder=\\\"First Name\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=newClient.lastName placeholder=\\\"Last Name\\\">\\r\\n        <input type=\\\"email\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=newClient.email placeholder=\\\"Email\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=newClient.phoneNumber placeholder=\\\"Phone Number\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control mb-4\\\" [(ngModel)]=newClient.address placeholder=\\\"Address\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=password  placeholder=\\\"Enter password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <span class=\\\"input-group-text\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=newClient.password placeholder=\\\"Confirm password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <span class=\\\"input-group-text\\\">\\r\\n              <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)='submitNewClient()'>Submit</button>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","module.exports = \".container {\\n  display: flex; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Customer } from '../../customer';\r\nimport { CustomerService } from '../../customer.service';\r\nimport { User } from '../../user'\r\nimport { UsersService } from '../../users.service'\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-newclient',\r\n  templateUrl: './newclient.component.html',\r\n  styleUrls: ['./newclient.component.scss']\r\n})\r\nexport class NewclientComponent implements OnInit {\r\n  user: User = new User();\r\n  newClient: Customer = new Customer();\r\n  hide = true;\r\n\r\n  userName: string = '';\r\n  password: string = '';\r\n  categoryValue: number;\r\n  customer: Customer;\r\n\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n  constructor(private customerService: CustomerService, private userService: UsersService, private authService: AuthService) { }\r\n\r\n  submitNewClient() {\r\n   \r\n    if (this.password == this.newClient.password) {\r\n      this.customerService.addNewClient(this.newClient)\r\n      this.customerService.singleCustomerObservable.subscribe(user => {\r\n        this.authService.login({ username: user.userName, password: user.password })\r\n      })\r\n    }\r\n    else {\r\n      console.log(this.password)\r\n      console.log(this.newClient.password)\r\n      alert('password  does not match');\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2> Thank you for your Order </h2>\\r\\n<p> The system is processing your order now. Soon you'll get a confirmation to your email</p>\\r\\n\\r\\n<p>You can track the order status on <button mdbBtn type=\\\"button\\\" color=\\\"default\\\" mdbWavesEffect routerLink=\\\"/table\\\"\\r\\n        (click)='this.dialogRef.close()'>My orders</button> </p>\\r\\n<p> You will receive an SMS when a delivery person will be on his way to pick it up</p>\\r\\n<button mdbBtn type=\\\"button\\\" color=\\\"default\\\" outline=\\\"true\\\" mdbWavesEffect routerLink='/' (click)='this.dialogRef.close()'>Close </button>\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-order-dialog',\r\n  templateUrl: './order-dialog.component.html',\r\n  styleUrls: ['./order-dialog.component.scss']\r\n})\r\nexport class OrderDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<OrderDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"main\\\">\\r\\n    <mat-dialog-content>\\r\\n\\r\\n        <mat-card>\\r\\n            <mat-card-header>\\r\\n                <h2 id=\\\"container\\\" style=\\\"color: indigo\\\">Order no: {{order.orderId}}</h2>\\r\\n            </mat-card-header>\\r\\n            <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-8\\\">\\r\\n                <mat-card-content>\\r\\n                    <label>Order date:\\r\\n                        <span> {{order.orderDate}}</span>\\r\\n                    </label>\\r\\n\\r\\n                    <label>Customer:\\r\\n                        <span> {{order.customer.firstName}} {{order.customer.lastName}}</span>\\r\\n                    </label>\\r\\n\\r\\n                    <label *ngIf=\\\"order.motoboyId\\\">First name motoboy:\\r\\n                        <span> {{order.motoboy.firstName}}</span>\\r\\n                    </label>\\r\\n\\r\\n                    <label>Destination Address:\\r\\n                        <span> {{order.destAddress}}</span>\\r\\n                    </label>\\r\\n\\r\\n                    <label>Description:\\r\\n                        <span> {{order.description}}</span>\\r\\n                    </label>\\r\\n\\r\\n                    <label>Price:\\r\\n                        <span> {{order.price}}₪</span>\\r\\n                    </label>\\r\\n                </mat-card-content>\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n                <span *ngIf=\\\"userType == 'motoboy' \\\">\\r\\n                    <button *ngIf=\\\"order.statusId == 2\\\" mdbBtn type=\\\"button\\\" outline=\\\"true\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\"\\r\\n                        mdbWavesEffect (click)=\\\"handleChangeStatus(3)\\\">pickedup\\r\\n                        order</button>\\r\\n                    <button *ngIf=\\\"order.statusId == 3\\\" mdbBtn type=\\\"button\\\" outline=\\\"true\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\"\\r\\n                        mdbWavesEffect (click)=\\\"handleChangeStatus(4)\\\">order\\r\\n                        deliverd</button>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        </mat-card>\\r\\n    </mat-dialog-content>\\r\\n\\r\\n    <app-stepper [order]=\\\"order\\\" [userType]=\\\"userType\\\"></app-stepper>\\r\\n    <mat-dialog-actions>\\r\\n        <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)=\\\"close()\\\">close</button>\\r\\n    </mat-dialog-actions>\\r\\n\\r\\n</div>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\nlabel {\\n  display: block;\\n  width: 500px;\\n  font: bold 18px; }\\n\\nspan {\\n  font: 15px; }\\n\"","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Order } from '../../Order';\r\nimport { OrdersService } from '../../orders.service';\r\nimport { AuthService } from '../../auth.service';\r\n\r\nexport interface DialogData {\r\n  order: Order;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-order-screen',\r\n  templateUrl: './order-screen.component.html',\r\n  styleUrls: ['./order-screen.component.scss']\r\n})\r\nexport class OrderScreenComponent implements OnInit {\r\n  //@Output() closeOrder : EventEmitter<any> = new EventEmitter();\r\n  currentUser;\r\n  userType: string;\r\n  showButton: boolean = true;\r\n  order: Order;\r\n  constructor(private authService: AuthService, private ordersService: OrdersService, public dialogRef: MatDialogRef<OrderScreenComponent>, @Inject(MAT_DIALOG_DATA) public dialogData: DialogData) {\r\n\r\n    this.order = this.dialogData.order\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.order.orderId > 0) {\r\n      this.showButton = false;\r\n    }\r\n\r\n    this.currentUser = this.authService.currentUser;\r\n    this.userType = this.authService.userType;\r\n    this.authService.authUpdated.subscribe((user) => {\r\n      this.currentUser = user;\r\n      console.log(this.currentUser)\r\n      this.userType = this.authService.userType;\r\n      console.log(this.userType)\r\n    })\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  handleChangeStatus(newStatus) {\r\n    this.ordersService.updateOrderStatus(this.order, this.order.orderId, newStatus);\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"order-card\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n\\r\\n        <mat-card-title>\\r\\n          <h3>Delivery Confirmation</h3>\\r\\n        </mat-card-title>\\r\\n\\r\\n      <span> Customer: <span class=\\\"field\\\"> {{ order.customer.firstName}} {{ order.customer.lastName}} </span></span><br>\\r\\n      <span> Receiver: <span class=\\\"field\\\">{{order.contactDestination}} </span></span> <br>\\r\\n      <span> Origin Address: <span class=\\\"field\\\"> {{order.localAddress }} </span> </span><br>\\r\\n      <span> Destenation Address: <span class=\\\"field\\\"> {{order.destAddress}} </span></span><br>\\r\\n      <span> Order Date:<span class=\\\"field\\\"> {{order.dateDelivery}} </span></span><br>\\r\\n      <span> Delivery Date: <span class=\\\"field\\\"> {{order.deliveryDate}} </span></span> <br>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <app-signature [order]=\\\"order\\\"></app-signature>\\r\\n      <button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)='confirmDelivered(order)' routerLink=\\\"/\\\">submit</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-card>\"","module.exports = \".order-card {\\n  width: 800px; }\\n\\n.field {\\n  color: #19807a; }\\n\\n.vertical-center {\\n  display: flex;\\n  align-items: center; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { OrdersService } from '../../orders.service';\r\nimport { Order } from '../../Order';\r\n\r\n@Component({\r\n  selector: 'app-orderdelivered',\r\n  templateUrl: './orderdelivered.component.html',\r\n  styleUrls: ['./orderdelivered.component.scss']\r\n})\r\nexport class OrderdeliveredComponent implements OnInit {\r\n  @Input() order: any;\r\n\r\n  // order : Order;\r\n  // localAddress : string = \" Hayesod 4\"\r\n  deliveryDate = new Date()\r\n\r\n  constructor(private ordersService: OrdersService) {\r\n    \r\n   }\r\n\r\n  viewFormConfirmation( order: Order){\r\n    \r\n    this.order.deliveryDate = new Date();\r\n\r\n  }\r\n  confirmDelivered(order){\r\n    this.handleChangeStatus(888, order)\r\n \r\n  }\r\n\r\n  handleChangeStatus(newStatus, order) {\r\n    this.ordersService.updateOrderStatus(order, order.orderId, newStatus)\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"========= inside orderdelivered ==============\")\r\n    console.log(this.order)\r\n    console.log(this.order.customer.firstName)\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row mt-5 pt-5 d-flex justify-content-center\\\">\\r\\n        <div class=\\\"col-12 col-md-auto \\\">\\r\\n            <h1>Your profile</h1>\\r\\n            <div class=\\\"user-container\\\">\\r\\n                <mdb-card>\\r\\n                    <mdb-card-body>\\r\\n                        <p>First Name: <span>{{currentUser.firstName}}</span></p>\\r\\n                        <p>Last Name: <span>{{currentUser.lastName}}</span></p>\\r\\n                        <p>Email: <span>{{currentUser.email}}</span></p>\\r\\n                        <p>Phone Number: <span>{{currentUser.phoneNumber}}</span></p>\\r\\n                        <p>Address: <span>{{currentUser.Address}}</span></p>\\r\\n                    </mdb-card-body>\\r\\n                </mdb-card>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".user-container {\\n  display: flex;\\n  background-color: white; }\\n\\n.card {\\n  min-width: 300px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UsersService } from '../../users.service';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\ncurrentUser;\r\nuserType;\r\nststusId :number=5 ; \r\n\r\n  constructor( private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authService.currentUser;\r\n    this.userType = this.authService.userType;\r\n    this.authService.authUpdated.subscribe((user)=>{\r\n      this.currentUser = user;\r\n      console.log(this.currentUser)\r\n      this.userType = this.authService.userType;\r\n      console.log(this.userType )\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"pad\\\">\\r\\n<signature-pad [options]=\\\"signaturePadOptions\\\" (onBeginEvent)=\\\"drawStart()\\\">\\r\\n\\r\\n</signature-pad>\\r\\n<br>\\r\\n<button mdbBtn type=\\\"button\\\" color=\\\"mdb-color\\\" outline=\\\"true\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)='drawComplete()'>Save</button>\\r\\n<button mdbBtn type=\\\"button\\\" color=\\\"blue-grey\\\"  outline=\\\"true\\\" class=\\\"waves-light m-4\\\" mdbWavesEffect (click)='this.signaturePad.clear()'>Clear</button>\\r\\n</div>\"","module.exports = \".pad {\\n  border: 1px solid;\\n  text-align: center; }\\n\"","import { Component, ViewChild, Input } from '@angular/core';\r\nimport { SignaturePad } from 'angular2-signaturepad/signature-pad';\r\nimport { OrdersService } from '../../orders.service';\r\nimport { Order } from '../../Order';\r\n \r\n\r\n@Component({\r\n  selector: 'app-signature',\r\n  templateUrl: './signature.component.html',\r\n  styleUrls: ['./signature.component.scss']\r\n})\r\nexport class SignatureComponent  {\r\n  @Input() order: Order\r\n  @ViewChild(SignaturePad) signaturePad: SignaturePad;\r\n \r\n  private signaturePadOptions: Object = { // passed through to szimek/signature_pad constructor\r\n    'minWidth': 3,\r\n    'canvasWidth': 400,\r\n    'canvasHeight': 200\r\n  };\r\n  \r\n  constructor(private ordersServices : OrdersService) { }\r\n \r\n  ngAfterViewInit() {\r\n    // this.signaturePad is now available\r\n    this.signaturePad.set('minWidth', 3); // set szimek/signature_pad options at runtime\r\n    this.signaturePad.clear(); // invoke functions from szimek/signature_pad API\r\n  }\r\n \r\n  drawComplete() {\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(this.signaturePad.toDataURL());\r\n    this.order.signature = this.signaturePad.toDataURL()\r\n    \r\n    //this.ordersServices.uploadSignature(image)\r\n  }\r\n \r\n  drawStart() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n  }\r\n\r\n\r\n\r\n  \r\n      \r\n}\r\n","module.exports = \"\\r\\n\\r\\n<ol class=\\\"progtrckr\\\" data-progtrckr-steps=\\\"5\\\">\\r\\n<div *ngIf=\\\"order.statusId===1\\\">\\r\\n    <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">wating for pickUp</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">On the way</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">Delivered</li>\\r\\n    <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===2\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===3\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-done\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===4\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-done\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-done\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-todo\\\">Closed</li>\\r\\n</div>\\r\\n<div *ngIf=\\\"order.statusId===888\\\">\\r\\n        <li class=\\\"progtrckr-done\\\">New order</li>\\r\\n        <li class=\\\"progtrckr-done\\\">wating for pickUp</li>\\r\\n        <li class=\\\"progtrckr-done\\\">On the way</li>\\r\\n        <li class=\\\"progtrckr-done\\\">Delivered</li>\\r\\n        <li class=\\\"progtrckr-done\\\">Closed</li>\\r\\n</div>\\r\\n </ol>\\r\\n\"","module.exports = \"ol.progtrckr {\\n  margin: 0;\\n  padding: 0;\\n  list-style-type: none; }\\n\\nol.progtrckr li {\\n  display: inline-block;\\n  text-align: center;\\n  line-height: 3em; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"2\\\"] li {\\n  width: 49%; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"3\\\"] li {\\n  width: 33%; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"4\\\"] li {\\n  width: 24%; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"5\\\"] li {\\n  width: 19%; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"6\\\"] li {\\n  width: 16%; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"7\\\"] li {\\n  width: 14%; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"8\\\"] li {\\n  width: 12%; }\\n\\nol.progtrckr[data-progtrckr-steps=\\\"9\\\"] li {\\n  width: 11%; }\\n\\nol.progtrckr li.progtrckr-done {\\n  color: black;\\n  border-bottom: 4px solid yellowgreen; }\\n\\nol.progtrckr li.progtrckr-todo {\\n  color: silver;\\n  border-bottom: 4px solid silver; }\\n\\nol.progtrckr li:after {\\n  content: \\\"\\\\00a0\\\\00a0\\\"; }\\n\\nol.progtrckr li:before {\\n  position: relative;\\n  bottom: -2.5em;\\n  float: left;\\n  left: 50%;\\n  line-height: 1em; }\\n\\nol.progtrckr li.progtrckr-done:before {\\n  content: \\\"\\\\2713\\\";\\n  color: white;\\n  background-color: yellowgreen;\\n  height: 1.2em;\\n  width: 1.2em;\\n  line-height: 1.2em;\\n  border: none;\\n  border-radius: 1.2em; }\\n\\nol.progtrckr li.progtrckr-todo:before {\\n  content: \\\"\\\\039F\\\";\\n  color: silver;\\n  background-color: white;\\n  font-size: 1.5em;\\n  bottom: -1.6em; }\\n\"","import {Component, OnInit, Input} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { Order } from '../../Order';\r\n\r\n@Component({\r\n  selector: 'app-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss']\r\n})\r\nexport class StepperComponent implements OnInit { \r\n\r\n  @Input() order: Order;\r\n  @Input() userType: string;\r\n  ngOnInit() {\r\n    console.log(\"this.order.statusId\")\r\nconsole.log(this.order.statusId)\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row mt-5 pt-5\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div *ngIf='!selectedOrder'>\\r\\n        <mat-icon class=\\\"click\\\" (click)=\\\"refresh()\\\">refresh</mat-icon>\\r\\n        <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n            <ng-container matColumnDef=\\\"orderId\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Order Id </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\"> {{order.orderId}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"customerId\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Customer </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\">\\r\\n                <div *ngIf=\\\"order.customerId != null\\\">{{order.customer.firstName}} {{order.customer.lastName}}</div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"customerPhone\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Customer Phone number </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\">\\r\\n                <div *ngIf=\\\"order.customerId != null\\\">{{order.customer.phone}}</div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"description\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\">\\r\\n                <div *ngIf=\\\"order.customerId != null\\\">{{order.description}}</div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"motoboyName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Delivery person </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\">\\r\\n                <div *ngIf=\\\"order.motoboyId == null\\\" style=\\\"color: red\\\">waiting</div>\\r\\n                <div *ngIf=\\\"order.motoboyId && order.customerId != null\\\">{{order.motoboy.firstName}}\\r\\n                  {{order.motoboy.lastName}}</div>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"localAddress\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Collecting Address </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\"> {{order.localAddress}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"destAddress\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Delivery Address </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\"> {{order.destAddress}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"price\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Price</th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\"> {{order.price}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Order Time </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\"> {{order.orderDate}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"active\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Take an Order </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\">\\r\\n                <mat-icon class=\\\"click\\\" *ngIf=\\\"order.motoboy === null\\\" (click)=\\\"handleAsignToOrder(order,2)\\\">add_circle</mat-icon>\\r\\n                <mat-icon class=\\\"lock-click\\\" style=\\\"color: burlywood\\\" *ngIf=\\\"order.motoboyId\\\">how_to_reg</mat-icon>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"status\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\"> {{order.status.name}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n              <td mat-cell *matCellDef=\\\"let order\\\">\\r\\n\\r\\n                <span>\\r\\n                  <mat-icon matTooltip=\\\"Edit Order\\\" class=\\\"click\\\" mat-raised-button (click)=\\\"editOrder(order.orderId)\\\">visibility</mat-icon>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"order.statusId == 4 && userType == motoboy\\\">\\r\\n                  <mat-icon matTooltip=\\\"Close Order\\\" class=\\\"click\\\" mat-raised-button (click)=\\\"closeOrder(order)\\\">check_circle_outline</mat-icon>\\r\\n                </span>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n    <app-orderdelivered *ngIf='selectedOrder' [order]=\\\"selectedOrder\\\"></app-orderdelivered>\\r\\n</div>\\r\\n\"","module.exports = \".edit-button {\\n  background-color: dodgerblue;\\n  color: white; }\\n\\n.mat-header-cell {\\n  color: #422888;\\n  font-size: 15Px; }\\n\\n.click {\\n  cursor: pointer; }\\n\\n.lock-click {\\n  cursor: context-menu; }\\n\\n.example-container {\\n  overflow: overlay; }\\n\\ntable {\\n  width: 100%; }\\n\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px; }\\n\\nth.mat-column-position, td.mat-column-position {\\n  padding-left: 8px; }\\n\\n.mat-table-sticky:first-child {\\n  border-right: 1px solid #e0e0e0; }\\n\\n.mat-table-sticky:last-child {\\n  border-left: 1px solid #e0e0e0; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Order } from '../../Order'\r\nimport { Observable } from 'rxjs';\r\nimport { OrdersService } from '../../orders.service'\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { MotoBoy } from '../../MotoBoy';\r\nimport { MotoService } from '../../moto.service';\r\nimport { AuthService } from '../../auth.service';\r\nimport { Customer } from '../../customer';\r\nimport { OrderScreenComponent } from '../order-screen/order-screen.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  userType;\r\n  order: Order;\r\n  currentUser;\r\n  openOrders:Array<Order> = new Array<Order>();\r\n  orders: Array<Order> = new Array<Order>();\r\n  dataSource = new MatTableDataSource(this.orders);\r\n\r\n  displayedColumns = [];\r\n  selectedOrder: Order ;\r\n  \r\n  constructor(private ordersService: OrdersService, private motoService: MotoService, public dialog: MatDialog, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    // this.dataSource.data === this.order used this way to filter\r\n    this.dataSource.data = this.ordersService.allOrders;\r\n    console.log(this.dataSource.data)\r\n    this.ordersService.getAllOrders();\r\n    this.ordersService.allOrdersObservable.subscribe((data) => {\r\n\r\n      this.dataSource.data = data.sort(this.compare);\r\n      console.log(this.dataSource.data)\r\n\r\n      this.currentUser = this.authService.currentUser;\r\n    this.authService.authUpdated.subscribe((user)=>{\r\n      this.currentUser = user\r\n      this.userType = this.authService.userType\r\n    })\r\n  \r\n      this.initColumns();\r\n    })\r\n\r\n    //nees to replace with current user\r\n    \r\n  }\r\n\r\n  handleAsignToOrder(order,newStatus) {\r\n    this.ordersService.updateOrderStatus(order, order.orderId, newStatus)\r\n  }\r\n\r\n  editOrder(order_id) {\r\n    let order = this.ordersService.findOrder(order_id)\r\n    //let companySelected = this.companyService.findCompany(client.company_id)\r\n    //client.company = companySelected.name;\r\n    let dialogRef = this.dialog.open(OrderScreenComponent, {\r\n      width: '900px',\r\n      data:{order: order}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  closeOrder(order){\r\n    this.selectedOrder = order;\r\n    console.log(order)\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    console.log(filterValue)\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  refresh() {\r\n    this.ordersService.getAllOrders();\r\n  }\r\n\r\n  initColumns() {\r\n    if (this.authService.userType === \"motoboy\") {\r\n      console.log(\"show moto columns\")\r\n      this.displayedColumns = ['orderId', 'description', 'customerId', 'customerPhone', 'localAddress', 'destAddress', 'orderDate','status', 'active', 'actions']\r\n\r\n    } else if (this.authService.userType === \"customer\") {\r\n      console.log(\"show customer columns\")\r\n      this.displayedColumns = ['orderId', 'description',  'motoboyName', 'localAddress', 'destAddress', 'orderDate','status', 'actions']\r\n    }\r\n  }\r\n//sort the array by status \r\n  compare(a,b) {\r\n    if (a.statusId < b.statusId)\r\n      return -1;\r\n    if (a.statusId > b.statusId)\r\n      return 1;\r\n    return 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MotoService } from './moto.service'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Customer } from './customer';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  NewCustomer = new Customer();\r\n  customers\r\n  currentCustomer: Customer = new Customer();\r\n\r\n  public singleCustomerObservable: Observable<Customer>;\r\n  private singleCustomerSubject: Subject<Customer> = new Subject<Customer>();\r\n\r\n  constructor( private motoService: MotoService, private http: HttpClient, \r\n    public snackBar: MatSnackBar) {\r\n    this.singleCustomerObservable = this.singleCustomerSubject.asObservable();\r\n  }\r\n\r\n  getCustomers()  {\r\n    this.http.get<Customer>('customersApi/').subscribe(data => {\r\n    this.customers = data;\r\n     })\r\n  }\r\n\r\n  getCustomer(id) {\r\n    this.http.get<Customer>('customersApi/customer').subscribe(data => {\r\n      this.currentCustomer = data[0];\r\n      this.singleCustomerSubject.next(data[0])\r\n      console.log(this.currentCustomer)\r\n      console.log(\"a\")\r\n     })\r\n  }\r\n\r\n  addNewClient(newClient : Customer){\r\n    this.http.post<Customer>('customersApi/add',newClient).subscribe(data => {\r\n      \r\n      this.currentCustomer = data;\r\n      this.currentCustomer.userName = newClient.userName;\r\n      this.currentCustomer.password = newClient.password\r\n     \r\n      this.singleCustomerSubject.next(this.currentCustomer)\r\n      this.snackBar.open(\"Sigup Succesful\", \" \", {\r\n        duration: 2000,\r\n      }); \r\n     })   \r\n  }\r\n\r\n  \r\n  updateUstomer(currentCustomer) {\r\n    let id = currentCustomer.customerId\r\n    this.http.put<Customer>('customersApi/update/' + id, { customer: currentCustomer }).subscribe((data) => {\r\n      this.currentCustomer = data;\r\n      this.singleCustomerSubject.next(data);\r\n    })\r\n  }\r\n\r\n  deleteCustomer(currentCustomer) {\r\n    console.log(\"inside delete\")\r\n    let id = currentCustomer.customerId\r\n    currentCustomer.active =false ;\r\n    this.http.put<Customer>('customersApi/delete/' + id, { customer: currentCustomer }).subscribe((data) => {\r\n      this.currentCustomer = data;\r\n      this.singleCustomerSubject.next(data);\r\n     \r\n    })\r\n  }\r\n  \r\n  reverseAddress(lat, lng) {\r\n    this.motoService.reverseAddress(lat, lng);\r\n  }\r\n\r\n}\r\n","export class Customer{\r\n\r\n    customerId: number;\r\n    userName: string;\r\n    password: string;\r\n    email : string ;\r\n    phoneNumber:string ;\r\n    firstName: string ;\r\n    lastName: string ;\r\n    address: string ;\r\n    active : boolean;\r\n\r\n    constructor() {\r\n        \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { MotoBoy } from './MotoBoy';\r\nimport { Customer } from './customer';\r\nimport { Order } from './Order';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EzxpressService {\r\n  motoBoy = []\r\n  client = [];\r\n  order = [] ;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getMotoBoy(){\r\n    return this.motoBoy;\r\n  }\r\n\r\n  addMotoBoy(motoboy){\r\n    this.motoBoy.push(motoboy);\r\n  }\r\n\r\n  addNewOrder(order){\r\n    this.http.post<Order>('ordersApi/add',order).subscribe((data) => {\r\n    })\r\n  }  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MotoBoy } from './MotoBoy';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MotoService {\r\n  \r\n  localAddress : string;\r\n  lat: number //= 51.678418;\r\n  lng: number\r\n\r\n  motoBoys: MotoBoy[] = [];\r\n  currentMotoBoy: MotoBoy = new MotoBoy();\r\n\r\n  formData: any = new FormData();\r\n  file: File;\r\n\r\n  public allMotoObservable: Observable<Array<MotoBoy>>;\r\n  private allMotoSubject: Subject<Array<MotoBoy>> = new Subject<Array<MotoBoy>>();\r\n\r\n  public singleMotoObservable: Observable<MotoBoy>;\r\n  private singleMotoSubject: Subject<MotoBoy> = new Subject<MotoBoy>();\r\n\r\n  public addressUpdated : Observable<any>;\r\n  public addressSubject: Subject<any>;\r\n\r\n  constructor(private http: HttpClient, public snackBar: MatSnackBar) {\r\n    this.singleMotoObservable = this.singleMotoSubject.asObservable();\r\n    this.allMotoObservable = this.allMotoSubject.asObservable();\r\n    this.getAllMoto();\r\n    this.addressSubject = new Subject<any>();\r\n    this.addressUpdated = this.addressSubject.asObservable();\r\n  }\r\n\r\n  getAllMoto() {\r\n    this.http.get<Array<MotoBoy>>('motoboysApi/').subscribe(data => {\r\n      this.motoBoys = data\r\n      this.allMotoSubject.next(this.motoBoys)\r\n     })\r\n  }\r\n\r\n  getMoto(id) {\r\n    this.http.get<MotoBoy>('motoboysApi/' + id).subscribe(data => {\r\n      this.currentMotoBoy = data[0];\r\n      this.singleMotoSubject.next(data[0])\r\n    })\r\n  }\r\n\r\n  shareLiveLocation(id) {\r\n    // this.singleMotoObservable.subscribe(() => {\r\n    //   setInterval(this.getMotoCurrentLocation(), 5000);\r\n    // })\r\n    this.getMoto(id);\r\n  }\r\n\r\n  updateMotoBoy(currentMotoBoy) {\r\n    let id = currentMotoBoy.motoboyId\r\n    this.http.put<MotoBoy>('motoboysApi/update/' + id, { motoboy: currentMotoBoy }).subscribe((data) => {\r\n      this.currentMotoBoy = data;\r\n      this.singleMotoSubject.next(data);\r\n    })\r\n  }\r\n\r\n  unActivatMotoboy(currentMotoBoy) {\r\n    currentMotoBoy.active = false;\r\n    this.updateMotoBoy(currentMotoBoy);\r\n  }\r\n\r\n  getMotoCurrentLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.currentMotoBoy.latitude = position.coords.latitude;\r\n        this.currentMotoBoy.longitude = position.coords.longitude;\r\n        this.currentMotoBoy.position = {\r\n          type: 'Point',\r\n          coordinates: [this.currentMotoBoy.longitude, this.currentMotoBoy.latitude]\r\n        }\r\n        this.reverseAddress(this.currentMotoBoy.latitude, this.currentMotoBoy.longitude);\r\n        this.updateMotoBoy(this.currentMotoBoy)\r\n      })\r\n    }\r\n  }\r\n\r\n  reverseAddress(lat, lng){\r\n    var geocoder: google.maps.Geocoder = new google.maps.Geocoder; \r\n    var latlng = {lat: lat , lng: lng};\r\n    geocoder.geocode({\"location\": latlng }, (results, status) => {\r\n        this.localAddress = results[0].formatted_address\r\n        console.log(this.localAddress)\r\n        this.addressSubject.next({localAddress: this.localAddress, lat: lat, lng: lng})\r\n      });\r\n  }\r\n\r\n  addMotoBoy(motoboy) {\r\n    let photo = motoboy.photo;\r\n    motoboy.photo = \" \";\r\n    this.http.post<MotoBoy>('motoboysApi/add', motoboy).subscribe((data) => {\r\n      this.currentMotoBoy = data;\r\n      this.currentMotoBoy.userName = motoboy.userName;\r\n      this.currentMotoBoy.password = motoboy.password\r\n      this.uploadPhoto(photo)\r\n      this.snackBar.open(\"Sigup Succesful\", \" \", {\r\n        duration: 2000,\r\n      });\r\n      this.singleMotoSubject.next(data)\r\n    })\r\n  }\r\n\r\n\r\n  getClosesMoto(lat, lng) {\r\n    let count = 0;\r\n    for ( let i=0 ; i < this.motoBoys.length; i++){\r\n      let distance = this.getDistanceFromLatLonInKm(lat,lng,this.motoBoys[i].latitude,this.motoBoys[i].longitude)\r\n      if (distance <= 1){ \r\n      }\r\n    }\r\n  }\r\n\r\n  // Fucntions to Calculate a distance between 2 points =====>\r\n  getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = this.deg2rad(lat2-lat1);  // deg2rad below\r\n    var dLon = this.deg2rad(lon2-lon1); \r\n    var a = \r\n      Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \r\n      Math.sin(dLon/2) * Math.sin(dLon/2)\r\n      ; \r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    var d = R * c; // Distance in km\r\n    return d;\r\n  }\r\n  \r\n deg2rad(deg) {\r\n    return deg * (Math.PI/180)\r\n  }\r\n\r\n/// ================>\r\n\r\n  uploadPhoto(photoFile) {\r\n    let photoFileName = this.currentMotoBoy.motoboyId + '.png'\r\n    this.formData.append(\"uploads\", photoFile, photoFileName);\r\n    this.http.post('uploadPhoto', this.formData).subscribe((data) => {\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Order } from './Order';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n  formData: any = new FormData();\r\n  allOrders: Array<Order> = [];\r\n  allOrdersSbject: Subject<Order[]> = new Subject<Order[]>();\r\n  allOrdersObservable: Observable<Order[]>;\r\n\r\n  constructor(private http: HttpClient, public snackBar: MatSnackBar, private router: Router) {\r\n    this.allOrdersObservable = this.allOrdersSbject.asObservable();\r\n    this.getAllOrders()\r\n   }\r\n\r\n   private OrdersServiceUrl = '/ordersApi'\r\n\r\n   getAllOrders(): void {\r\n    this.http.get<Order[]>(this.OrdersServiceUrl).subscribe((orders) => {\r\n      this.allOrders = orders;\r\n      console.log(orders)\r\n      this.allOrdersSbject.next(orders)\r\n    })\r\n  }\r\n  \r\n  findOrder(order_id) {  \r\n    return this.allOrders.find( order => order.orderId == order_id )\r\n  }\r\n  \r\n  addNewOrder(order){\r\n \r\n    this.http.post<Order>('ordersApi/add',order).subscribe(() => {\r\n      console.log(\"added succesfuly\")\r\n      this.getAllOrders();\r\n    })\r\n  }\r\n  \r\n  getOrderById(id: number): void{\r\n    this.http.get<Order>(this.OrdersServiceUrl + `/${id}`).subscribe((order) => {\r\n    });\r\n  }\r\n  \r\n  updateOrderStatus(order, id, status) {\r\n    order.statusId = status\r\n    this.http.put<Order>(`ordersApi/updateStatus/${id}`, order).subscribe(() => {\r\n      if(status == 888){\r\n        this.confirmEmail(order)\r\n      }\r\n      this.getAllOrders();\r\n    })\r\n  }\r\n  sendSmsToCustomer(order: Order){\r\n     this.http.post('/send', {\r\n      from: 'Acme Inc',\r\n      to: order.phoneNumber,\r\n      text: 'motoBoy on the way!'\r\n    }).subscribe((data) => {\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n  cancelAssignToOrder(order) {\r\n    order.motoboy = null;\r\n    order.status = 1;\r\n  }\r\n\r\n  confirmEmail(order) {\r\n    console.log(\"send email ........\")\r\n    this.http.post('/sendEmail', order).subscribe((data) => {\r\n      console.log(data)\r\n      this.snackBar.open(\"Email Sent to the client\", \" \", {\r\n        duration: 3000,\r\n      });\r\n      this.router.navigate([''])\r\n    })      \r\n  }\r\n}","export class User{\r\n   \r\n    id  : number;\r\n    userName :  string;\r\n    password :  string;\r\n    customerId :  number;\r\n    motoboyId :  number;\r\n    token: string;\r\n    constructor() {}\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { MotoService } from './moto.service'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from './user';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from './customer';\r\nimport { MotoBoy } from './MotoBoy';\r\nimport { CustomerService } from './customer.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  newUser = new User();\r\n  customers\r\n  currentUser;\r\n\r\n\r\n  public singleUserObservable: Observable<User>;\r\n  private singleUserSubject: Subject<User> = new Subject<User>();\r\n\r\n  constructor(private http: HttpClient, private router: Router, private customerService: CustomerService, private motoService: MotoService) {\r\n    this.singleUserObservable = this.singleUserSubject.asObservable()\r\n  }\r\n\r\n  getCustomers() {\r\n    this.http.get<User>('usersApi/').subscribe(data => {\r\n      this.customers = data;\r\n    })\r\n  }\r\n\r\n  getCustomer(id) {\r\n    this.http.get<User>('usersApi/' + id).subscribe(data => {\r\n      this.currentUser = data[0];\r\n      this.singleUserSubject.next(data[0])\r\n    })\r\n  }\r\n\r\n  addNewClient(newUser: User) {\r\n    this.http.post<User>('usersApi/add', newUser).subscribe(data => {\r\n      this.currentUser = data[0];\r\n      this.singleUserSubject.next(data[0])\r\n    })\r\n  }\r\n\r\n  deleteCustomer(currentUser) {\r\n    let id = currentUser.customerId\r\n    currentUser.active = false;\r\n    this.http.put<User>('usersApi/delete/' + id, { customer: currentUser }).subscribe((data) => {\r\n      //update motoboys array\r\n      this.currentUser = data;\r\n      this.singleUserSubject.next(data);\r\n\r\n    })\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\n// platformBrowserDynamic().Module(AppModule)\r\n//   .catch(err => console.log(err));\r\n\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));"],"sourceRoot":""}